# -*- coding: utf-8 -*-
import questionary
from rich.console import Console
import typer
import sys

# Crear consola para salida con Rich
console = Console()

def pdf_menu():
    """Men√∫ interactivo para comandos de operaciones con PDF."""
    
    console.print("[bold blue]===== Men√∫ Operaciones PDF =====[/bold blue]")
    
    opciones = [
        {"name": "‚úçÔ∏è Firmar PDF (interactivo)", "value": "sign"},
        {"name": "üìù Firmar PDF (especificar archivo)", "value": "sign_file"},
        {"name": "‚¨ÖÔ∏è Volver al men√∫ principal", "value": "volver"},
        {"name": "‚ùå Salir", "value": "exit"}
    ]
    
    try:
        seleccion = questionary.select(
            "Seleccione una opci√≥n:",
            choices=[opcion["name"] for opcion in opciones],
            use_indicator=True
        ).ask()
        
        if seleccion is None:  # Usuario presion√≥ Ctrl+C
            return "exit"
            
        # Obtener el valor asociado a la selecci√≥n
        comando = next(opcion["value"] for opcion in opciones if opcion["name"] == seleccion)
        
        if comando == "exit":
            console.print("[yellow]Saliendo...[/yellow]")
            sys.exit(0)
        elif comando == "volver":
            from orgm.commands.menu import menu_principal
            return menu_principal()
        elif comando == "sign":
            # Ejecutar firma interactiva
            console.print("Iniciando selecci√≥n interactiva de PDF...")
            from orgm.commands.pdf import pdf_firmar_interactivo
            
            # Obtener par√°metros opcionales mediante questionary
            use_defaults = questionary.confirm(
                "¬øDesea usar valores predeterminados (x=100, y=100, ancho=200)?",
                default=True
            ).ask()
            
            if use_defaults:
                pdf_firmar_interactivo()
            else:
                x_pos = int(questionary.text("Posici√≥n X:", default="100").ask() or "100")
                y_pos = int(questionary.text("Posici√≥n Y:", default="100").ask() or "100")
                ancho = int(questionary.text("Ancho:", default="200").ask() or "200")
                pdf_firmar_interactivo(x_pos, y_pos, ancho)
                
            return pdf_menu()  # Volver al mismo men√∫ despu√©s
            
        elif comando == "sign_file":
            # Solicitar par√°metros necesarios
            archivo_pdf = questionary.text("Ruta al archivo PDF:").ask()
            if not archivo_pdf:
                console.print("[yellow]Operaci√≥n cancelada: No se especific√≥ un archivo[/yellow]")
                return pdf_menu()
                
            x_pos = int(questionary.text("Posici√≥n X:", default="100").ask() or "100")
            y_pos = int(questionary.text("Posici√≥n Y:", default="100").ask() or "100")
            ancho = int(questionary.text("Ancho:", default="200").ask() or "200")
            
            salida = questionary.text("Nombre del archivo de salida (opcional):").ask()
            
            from orgm.commands.pdf import pdf_firmar
            pdf_firmar(archivo_pdf, x_pos, y_pos, ancho, salida)
            
            return pdf_menu()  # Volver al mismo men√∫ despu√©s
            
    except Exception as e:
        console.print(f"[bold red]Error en el men√∫: {e}[/bold red]")
        return "error"

if __name__ == "__main__":
    # Para pruebas
    pdf_menu() 